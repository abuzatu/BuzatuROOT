Go through the examples of folders 1 and 2 by reading the README.txt from these folders, running the code and looking through the code. 

As a task, please write your code to save another class to the tree and then read it back and print out some members of the class. Similary to the example 2, the code should just type make and compile and run both the creating of the tree, and the reading of the tree. You can use a class from your own research, such as Particle, or CollectionOfElectrons, or even Event. If you don't have one, please use the Body (planet) class from the C++ tutorial lab 4, read the planet text file and save each planet as an entry in the tree. There will be as many entries as planets. The tree will have only one branch, that of planet. I attach that class and input file in folder 3, but without any folder structure. Please use a beautiful input, output, Makefile just as in folder 2. In the input file each line represents the information for one planet in this order: name, mass, position x, position y, position z, velocity vx, velocity vy, velocity vz. When you read back the tree, it is enough to say body.Print() and it will print all these info to double check that we indeed read the values of the planets we just compare with these from the input file. 


